name: macOS

on:
  pull_request:
  push:
  release:
    types: published

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew install llvm cmake ninja
          echo "JAVA_HOME=${JAVA_HOME_8_X64}" >> "$GITHUB_ENV"
          echo "CXX=/usr/local/opt/llvm/bin/clang++" >> $GITHUB_ENV
          echo "CC=/usr/local/opt/llvm/bin/clang"    >> $GITHUB_ENV
          echo "LINKER=$(which ld)"                  >> $GITHUB_ENV

      - name: Restore LLVM cache
        if: ${{ !env.ACT }}
        id: restore-llvm
        uses: actions/cache/restore@v3.2.0-beta.1
        with:
          path: ./native/llvm-*
          key: ${{ runner.os }}-${{ hashFiles('./native/*.cmake') }}

      - name: Build LLVM
        id: build-llvm
        working-directory: ./native
        run: cmake -DCMAKE_BUILD_TYPE=Release -DACTION=CONFIGURE -P build.cmake

      - name: Save LLVM cache
        if: steps.build-llvm.outcome == 'success'
        uses: actions/cache/save@v3.2.0-beta.1
        id: save-llvm
        with:
          path: ./native/llvm-*
          key: ${{ runner.os }}-${{ hashFiles('./native/*.cmake') }}

      - name: Configure release build
        working-directory: ./native
        run: cmake -DCMAKE_BUILD_TYPE=Release -DACTION=CONFIGURE -P build.cmake

      - name: Release build shim
        working-directory: ./native
        if: always()
        run: cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-shim-jvm -P build.cmake

      - name: Release build runtime
        working-directory: ./native
        if: always()
        run: cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-runtime-jvm -P build.cmake

      - name: Release build compiler
        working-directory: ./native
        if: always()
        run: cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-compiler-jvm -P build.cmake

      - name: Check artefact
        if: always()
        working-directory: ./native
        run: ls -lah build-darwin-x86_64/bindings/jvm
