name: Windows

on:
  pull_request:
  push:
  release:
    types: published

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache LLVM
        if: ${{ !env.ACT }}
        id: prepare-llvm
        uses: actions/cache@v3
        with:
          path: ./native/llvm
          key: ${{ runner.os }}-${{ hashFiles('./native/build_llvm.cmake') }}

      - name: Configure release build
        shell: cmd
        working-directory: ./native
        run: |
          call setup_msvc_env.bat 
          cmake -DCMAKE_BUILD_TYPE=Release -DACTION=CONFIGURE -P build.cmake

      - name: Release build shim
        shell: cmd
        working-directory: ./native
        run: |
          call setup_msvc_env.bat 
          cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-shim-jvm -P build.cmake

      - name: Release build runtime
        shell: cmd
        working-directory: ./native
        run: |
          call setup_msvc_env.bat 
          cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-runtime-jvm -P build.cmake

      - name: Release build compiler
        shell: cmd
        working-directory: ./native
        run: |
          call setup_msvc_env.bat 
          cmake -DCMAKE_BUILD_TYPE=Release -DACTION=BUILD -DTARGET=polyregion-compiler-jvm -P build.cmake

      - name: Check artefact
        shell: cmd
        working-directory: ./native
        run: dir build-windows-x86_64/bindings/jvm

 