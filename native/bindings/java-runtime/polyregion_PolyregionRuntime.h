/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class polyregion_PolyregionRuntime */

#ifndef _Included_polyregion_PolyregionRuntime
#define _Included_polyregion_PolyregionRuntime
#ifdef __cplusplus
extern "C" {
#endif
#undef polyregion_PolyregionRuntime_TYPE_1BOOL
#define polyregion_PolyregionRuntime_TYPE_1BOOL 1L
#undef polyregion_PolyregionRuntime_TYPE_1BYTE
#define polyregion_PolyregionRuntime_TYPE_1BYTE 2L
#undef polyregion_PolyregionRuntime_TYPE_1CHAR
#define polyregion_PolyregionRuntime_TYPE_1CHAR 3L
#undef polyregion_PolyregionRuntime_TYPE_1SHORT
#define polyregion_PolyregionRuntime_TYPE_1SHORT 4L
#undef polyregion_PolyregionRuntime_TYPE_1INT
#define polyregion_PolyregionRuntime_TYPE_1INT 5L
#undef polyregion_PolyregionRuntime_TYPE_1LONG
#define polyregion_PolyregionRuntime_TYPE_1LONG 6L
#undef polyregion_PolyregionRuntime_TYPE_1FLOAT
#define polyregion_PolyregionRuntime_TYPE_1FLOAT 7L
#undef polyregion_PolyregionRuntime_TYPE_1DOUBLE
#define polyregion_PolyregionRuntime_TYPE_1DOUBLE 8L
#undef polyregion_PolyregionRuntime_TYPE_1PTR
#define polyregion_PolyregionRuntime_TYPE_1PTR 9L
#undef polyregion_PolyregionRuntime_TYPE_1VOID
#define polyregion_PolyregionRuntime_TYPE_1VOID 10L
/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invoke
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)V
 */
JNIEXPORT void JNICALL Java_polyregion_PolyregionRuntime_invoke
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeInt
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)I
 */
JNIEXPORT jint JNICALL Java_polyregion_PolyregionRuntime_invokeInt
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeLong
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)J
 */
JNIEXPORT jlong JNICALL Java_polyregion_PolyregionRuntime_invokeLong
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeFloat
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)F
 */
JNIEXPORT jfloat JNICALL Java_polyregion_PolyregionRuntime_invokeFloat
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeDouble
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)D
 */
JNIEXPORT jdouble JNICALL Java_polyregion_PolyregionRuntime_invokeDouble
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeShort
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)S
 */
JNIEXPORT jshort JNICALL Java_polyregion_PolyregionRuntime_invokeShort
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeChar
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)C
 */
JNIEXPORT jchar JNICALL Java_polyregion_PolyregionRuntime_invokeChar
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeByte
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;)B
 */
JNIEXPORT jbyte JNICALL Java_polyregion_PolyregionRuntime_invokeByte
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray);

/*
 * Class:      polyregion_PolyregionRuntime
 * Method:     invokeObject
 * Signature:  ([BLjava/lang/String;[B[Ljava/nio/Buffer;I)Ljava/nio/Buffer;
 */
JNIEXPORT jobject JNICALL Java_polyregion_PolyregionRuntime_invokeObject
  (JNIEnv *, jclass, jbyteArray, jstring, jbyteArray, jobjectArray, jint);

#ifdef __cplusplus
}
#endif
#endif
